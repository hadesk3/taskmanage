<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1, shrink-to-fit=no"
        />

        <!-- Favicon -->
        <link rel="shortcut icon" href="/images/favicon.ico" />
        <link rel="stylesheet" href="/css/backend-plugin.min.css" />
        <link rel="stylesheet" href="/css/backend.css?v=1.0.0" />
        <link
            rel="stylesheet"
            href="/vendor/line-awesome/dist/line-awesome/css/line-awesome.min.css"
        />
        <link rel="stylesheet" href="/vendor/remixicon/fonts/remixicon.css" />

        <link
            rel="stylesheet"
            href="/vendor/tui-calendar/tui-calendar/dist/tui-calendar.css"
        />
        <link
            rel="stylesheet"
            href="/vendor/tui-calendar/tui-date-picker/dist/tui-date-picker.css"
        />
        <link
            rel="stylesheet"
            href="/vendor/tui-calendar/tui-time-picker/dist/tui-time-picker.css"
        />
    </head>
    <body class="  ">
        <!-- loader Start -->
        <div id="loading">
            <div id="loading-center"></div>
        </div>
        <!-- loader END -->
        <!-- Wrapper Start -->
        <div class="wrapper">
            <div class="content-page">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="card">
                                <div class="card-body">
                                    <div
                                        class="d-flex flex-wrap align-items-center justify-content-between breadcrumb-content"
                                    >
                                        <h5>Your Task</h5>
                                        <div
                                            class="d-flex flex-wrap align-items-center"
                                        >
                                            <div
                                                class="dropdown dropdown-project mr-3"
                                            >
                                                <div
                                                    class="dropdown-toggle"
                                                    id="dropdownMenuButton03"
                                                    data-toggle="dropdown"
                                                >
                                                    <div
                                                        class="btn bg-body"
                                                        id="projectInfo"
                                                    >
                                                        <span class="h6"
                                                            >Project :</span
                                                        >
                                                    </div>
                                                </div>
                                                <div
                                                    class="dropdown-menu dropdown-menu-right"
                                                    aria-labelledby="dropdownMenuButton03"
                                                >
                                                    <a
                                                        class="dropdown-item"
                                                        href="#"
                                                        ><i
                                                            class="ri-mic-line mr-2"
                                                        ></i
                                                        >In Progress</a
                                                    >
                                                    <a
                                                        class="dropdown-item"
                                                        href="#"
                                                        ><i
                                                            class="ri-attachment-line mr-2"
                                                        ></i
                                                        >Priority</a
                                                    >
                                                    <a
                                                        class="dropdown-item"
                                                        href="#"
                                                        ><i
                                                            class="ri-file-copy-line mr-2"
                                                        ></i
                                                        >Category</a
                                                    >
                                                </div>
                                            </div>
                                            <% if (user.role ===
                                            'headofsubject') { %>
                                            <a
                                                href="#"
                                                class="btn btn-primary"
                                                data-target="#new-task-modal"
                                                data-toggle="modal"
                                                >New Task</a
                                            >
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- task-->

                        <div class="col-lg-12">
                            <div class="card">
                                <div class="card-body">
                                    <div class="row" id="taskList"></div>
                                </div>
                            </div>
                        </div>

                        <!-- Page end  -->
                    </div>
                </div>
            </div>
            <!-- Wrapper End-->

            <!-- Modal add new start -->
            <div
                class="modal fade bd-example-modal-lg"
                role="dialog"
                aria-modal="true"
                id="new-task-modal"
            >
                <div
                    class="modal-dialog modal-dialog-centered modal-lg"
                    role="document"
                >
                    <div class="modal-content">
                        <div
                            class="modal-header d-block text-center pb-3 border-bttom"
                        >
                            <h3
                                class="modal-title"
                                id="exampleModalCenterTitle"
                            >
                                New Task
                            </h3>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="form-group mb-3">
                                        <label
                                            for="exampleInputText02"
                                            class="h5"
                                            >Task Name</label
                                        >
                                        <input
                                            type="text"
                                            class="form-control"
                                            id="exampleInputText02"
                                            placeholder="Enter task Name"
                                        />
                                        <a href="#" class="task-edit text-body"
                                            ><i class="ri-edit-box-line"></i
                                        ></a>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group mb-3">
                                        <label for="membersDropdown" class="h5"
                                            >Assigned to</label
                                        >
                                        <select
                                            name="type"
                                            class="selectpicker form-control"
                                            multiple="multiple"
                                            data-style="py-0"
                                            id="membersDropdown"
                                        >
                                            <option value="">Members</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group mb-3">
                                        <label
                                            for="exampleInputText05"
                                            class="h5"
                                            >Due Dates*</label
                                        >
                                        <input
                                            type="date"
                                            class="form-control"
                                            id="exampleInputText05"
                                            value=""
                                        />
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group mb-3">
                                        <label
                                            for="exampleInputText2"
                                            class="h5"
                                            >Category</label
                                        >
                                        <select
                                            name="type"
                                            class="selectpicker form-control"
                                            data-style="py-0"
                                        >
                                            <option>Design</option>
                                            <option>Android</option>
                                            <option>IOS</option>
                                            <option>Ui/Ux Design</option>
                                            <option>Development</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group mb-3">
                                        <label
                                            for="exampleInputText040"
                                            class="h5"
                                            >Description</label
                                        >
                                        <textarea
                                            class="form-control"
                                            id="exampleInputText040"
                                            rows="2"
                                        ></textarea>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group mb-3">
                                        <label
                                            for="exampleInputText005"
                                            class="h5"
                                            >Checklist</label
                                        >
                                        <input
                                            type="text"
                                            class="form-control"
                                            id="exampleInputText005"
                                            placeholder="Add List, lists separated by compass"
                                        />
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group mb-0">
                                        <label
                                            for="exampleInputText01"
                                            class="h5"
                                            >Attachments</label
                                        >
                                        <div class="custom-file">
                                            <input
                                                type="file"
                                                class="custom-file-input"
                                                id="inputGroupFile003"
                                            />
                                            <label
                                                class="custom-file-label"
                                                for="inputGroupFile003"
                                                >Upload media</label
                                            >
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div
                                        class="d-flex flex-wrap align-items-ceter justify-content-center mt-4"
                                    >
                                        <button
                                            class="btn btn-primary mr-3"
                                            data-dismiss="modal"
                                            onclick="createTask()"
                                        >
                                            Save
                                        </button>
                                        <div
                                            class="btn btn-primary"
                                            data-dismiss="modal"
                                        >
                                            Cancel
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Modal add new end -->

            <!-- Modal extend time start -->
            <div
                class="modal fade bd-example-modal-lg"
                role="dialog"
                aria-modal="true"
                id="extend-task-modal"
            >
                <div
                    class="modal-dialog modal-dialog-centered modal-lg"
                    role="document"
                >
                    <div class="modal-content">
                        <div
                            class="modal-header d-block text-center pb-3 border-bttom"
                        >
                            <h3
                                class="modal-title"
                                id="exampleModalCenterTitle"
                            >
                                Extend Time
                            </h3>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="form-group mb-3">
                                        <label for="extendTaskReason" class="h5"
                                            >Reason</label
                                        >
                                        <textarea
                                            class="form-control"
                                            id="extendTaskReason"
                                            rows="2"
                                        ></textarea>
                                    </div>
                                </div>

                                <div class="col-lg-12">
                                    <div class="form-group mb-3">
                                        <label for="dateExtend" class="h5"
                                            >Due Dates*</label
                                        >
                                        <input
                                            type="date"
                                            class="form-control"
                                            id="dateExtend"
                                            value=""
                                        />
                                    </div>
                                </div>

                                <div class="col-lg-12">
                                    <div class="form-group mb-0">
                                        <label for="proofExtend" class="h5"
                                            >Attachments</label
                                        >
                                        <div class="custom-file">
                                            <input
                                                type="file"
                                                class="custom-file-input"
                                                id="proofExtend"
                                            />
                                            <label
                                                class="custom-file-label"
                                                for="proofExtend"
                                                >Upload proof</label
                                            >
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div
                                        class="d-flex flex-wrap align-items-ceter justify-content-center mt-4"
                                    >
                                        <button
                                            class="btn btn-primary mr-3"
                                            data-dismiss="modal"
                                            onclick="sendNotiExtend()"
                                        >
                                            Send
                                        </button>
                                        <div
                                            class="btn btn-primary"
                                            data-dismiss="modal"
                                        >
                                            Cancel
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Modal extend time end -->

            <!-- Modal edit start -->
            <div
                class="modal fade bd-example-modal-lg"
                role="dialog"
                aria-modal="true"
                id="editTaskModal"
            >
                <div
                    class="modal-dialog modal-dialog-centered modal-lg"
                    role="document"
                >
                    <div class="modal-content">
                        <div
                            class="modal-header d-block text-center pb-3 border-bttom"
                        >
                            <h3
                                class="modal-title"
                                id="exampleModalCenterTitle"
                            >
                                Edit Task
                            </h3>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="form-group mb-3">
                                        <label for="editTaskName" class="h5"
                                            >Task Name</label
                                        >
                                        <input
                                            type="text"
                                            class="form-control"
                                            id="editTaskName"
                                            placeholder="Enter task Name"
                                        />
                                        <a href="#" class="task-edit text-body"
                                            ><i class="ri-edit-box-line"></i
                                        ></a>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group mb-3">
                                        <label for="editMembers" class="h5"
                                            >Assigned to</label
                                        >
                                        <select
                                            name="type"
                                            class="selectpicker form-control"
                                            multiple="multiple"
                                            data-style="py-0"
                                            id="editMembers"
                                        >
                                            <option value="">Members</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group mb-3">
                                        <label for="editDueDate" class="h5"
                                            >Due Dates*</label
                                        >
                                        <input
                                            type="date"
                                            class="form-control"
                                            id="editDueDate"
                                            value=""
                                        />
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group mb-3">
                                        <label for="editCategory" class="h5"
                                            >Category</label
                                        >
                                        <select
                                            name="type"
                                            class="selectpicker form-control"
                                            data-style="py-0"
                                            id="editCategory"
                                        >
                                            <option>Design</option>
                                            <option>Android</option>
                                            <option>IOS</option>
                                            <option>Ui/Ux Design</option>
                                            <option>Development</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group mb-3">
                                        <label for="editDescription" class="h5"
                                            >Description</label
                                        >
                                        <textarea
                                            class="form-control"
                                            id="editDescription"
                                            rows="2"
                                        ></textarea>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group mb-3">
                                        <label for="editCheckList" class="h5"
                                            >Checklist</label
                                        >
                                        <input
                                            type="text"
                                            class="form-control"
                                            id="editCheckList"
                                            placeholder="Add List, lists separated by compass"
                                        />
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group mb-0">
                                        <label for="editInputFile" class="h5"
                                            >Attachments</label
                                        >
                                        <div class="custom-file">
                                            <input
                                                type="file"
                                                class="custom-file-input"
                                                id="editInputFile"
                                            />
                                            <label
                                                class="custom-file-label"
                                                for="editInputFile"
                                                >Upload media</label
                                            >
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div
                                        class="d-flex flex-wrap align-items-ceter justify-content-center mt-4"
                                    >
                                        <button
                                            class="btn btn-primary mr-3"
                                            data-dismiss="modal"
                                            onclick="doEdit()"
                                        >
                                            Save
                                        </button>
                                        <div
                                            class="btn btn-primary"
                                            data-dismiss="modal"
                                        >
                                            Cancel
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Confirm delete -->
        <div
            class="modal fade"
            id="exampleModal"
            tabindex="-1"
            role="dialog"
            aria-labelledby="exampleModalLabel"
            aria-hidden="true"
        >
            <div class="modal-dialog">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title" id="exampleModalLabel">
                            Delete task
                        </h4>
                        <button
                            type="button"
                            class="close"
                            data-dismiss="modal"
                        >
                            &times;
                        </button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        Do you want to delete task
                        <strong id="delname"></strong>? , all data will be lost.
                    </div>
                    <input type="hidden" id="delid" />
                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button
                            type="button"
                            class="btn btn-danger"
                            onclick="do_delete()"
                        >
                            Delete
                        </button>
                        <button
                            type="button"
                            class="btn btn-dark"
                            data-dismiss="modal"
                        >
                            Cancle
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Confirm delete -->
    </body>

    <!-- manage task -->
    <script>
        // display loading
        function displayLoading() {
            document.getElementById("loading").style.display = "block";
        }
        // hide loading
        function hideLoading() {
            document.getElementById("loading").style.display = "none";
        }

        const projectName = localStorage.getItem("projectName");
        if (projectName) {
            document.getElementById("projectInfo").insertAdjacentHTML(
                "beforeend",
                `<span>${projectName}</span><i
                    class="ri-arrow-down-s-line ml-2 mr-0"
                ></i>`
            );
        }

        // -------
        listProjects = [];
        listTasks = [];

        let htmlUser = "";
        const rawData = localStorage.getItem("listUser");
        try {
            listMembers = JSON.parse(rawData) || [];

            listMembers.forEach((member) => {
                htmlUser += `<option value="${member._id}">${member.name}</option>`;
            });
            document.getElementById("membersDropdown").innerHTML = htmlUser;
            $(document).ready(function () {
                $("#membersDropdown").selectpicker("refresh");
            });
        } catch (error) {
            console.error(
                "Dữ liệu trong localStorage không phải JSON hợp lệ:",
                error
            );
            listMembers = [];
        }
        // fetch members

        const url = window.location.href; // Lấy URL hiện tại
        const id = url.split("/").pop();

        const taskBody = document.getElementById("taskList");

        const render = (tasks) => {
            let html = "";
            let membersList = "";
            const sender = "";

            tasks.forEach((task, user) => {
                let formattedEndDate = "";
                if (task.deadline) {
                    formattedEndDate = new Date(task.deadline)
                        .toISOString()
                        .split("T")[0];
                }

                // 1. Lấy dữ liệu thành viên
                membersList = listMembers
                    .map((member) => {
                        // Kiểm tra xem member có trong task.assigned_to không
                        const isSelected = task.assigned_to?.some(
                            (assignedMember) =>
                                assignedMember._id === member._id
                        );
                        return `<option value="${member._id}" ${
                            isSelected ? "selected" : ""
                        }>
                    ${member.name}
                </option>`;
                    })
                    .join("");

                let checklistItems = "";
                if (task.checkList && task.checkList.length > 0) {
                    task.checkList.forEach((item, index) => {
                        checklistItems += `
                <div class="custom-control custom-checkbox custom-control-inline">
                    <input type="checkbox" class="custom-control-input" id="checklist-${
                        task._id
                    }-${index}" ${
                            item.status ? "checked" : ""
                        } onchange="toggleChecklistItem('${
                            task._id
                        }', ${index})">
                    <label class="custom-control-label" for="checklist-${
                        task._id
                    }-${index}">${item.title}</label>
                </div>`;
                    });
                } else {
                    checklistItems = "<p>No checklist items yet.</p>"; // Or any other default message
                }

                const collapseId = `collapseEdit${task._id}`;

                html += `
                    <div class="col-lg-12">
                        <div
                            class="card card-widget task-card"
                        >
                            <div class="card-body">
                                <div
                                    class="d-flex flex-wrap align-items-center justify-content-between"
                                >
                                    <div
                                        class="d-flex align-items-center"
                                    >
                                        <div
                                            class="custom-control custom-task custom-checkbox custom-control-inline"
                                        >
                                            <input
                                                type="checkbox"
                                                class="custom-control-input"
                                                id="customCheck${task._id}"
                                                data-task-id="${task._id}"
                                                 onchange="debounceToggleTaskStatus('${
                                                     task._id
                                                 }')"
                                                ${
                                                    task.status === "Done"
                                                        ? "checked"
                                                        : ""
                                                }
                                            />
                                            <label
                                                class="custom-control-label"
                                                for="customCheck${task._id}"
                                            ></label>
                                        </div>
                                        <div>
                                            <h5
                                                class="mb-2"
                                            >
                                                ${task.title} (
                                                ${formattedEndDate})
                                            </h5>
                                            <div
                                                class="media align-items-center"
                                            >
                                                <div
                                                    class="btn bg-body mr-3"
                                                >
                                                    <i
                                                        class="ri-align-justify mr-2"
                                                    ></i
                                                    >5/10
                                                </div>
                                                <div
                                                    class="btn bg-body"
                                                >
                                                    <i
                                                        class="ri-survey-line mr-2"
                                                    ></i
                                                    >3
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div
                                        class="media align-items-center mt-md-0 mt-3"
                                    >
                                        <button
                                            class="btn bg-secondary-light mr-3"
                                            type="button"
                                            data-bs-toggle="modal"
                                            data-bs-target="#extend-task-modal"
                                            onclick="openExtendModal('${
                                                task._id
                                            }', '${task.title}')"
                                        
                                        >
                                        Extend time
                                        </button>
                                        <% if (user.role === 'headofsubject') { %>
                                            <button
                                                class="btn bg-secondary-light mr-3"
                                                type="button"
                                                data-bs-toggle="modal"
                                                data-bs-target="#editTaskModal"
                                                onclick="editTask('${
                                                    task._id
                                                }')"
                                                ><i
                                                    class="ri-edit-box-line m-0"
                                                ></i>
                                            </button>
                                            <button
                                                class="btn bg-secondary-light mr-3"
                                                type="button"
                                                data-bs-toggle="modal"
                                                data-bs-target="#deleteConfirmModal"
                                                onclick="deleteTask('${
                                                    task._id
                                                }')"
                                            >
                                                <i
                                                    class="ri-delete-bin-line m-0"
                                                ></i>
                                            </button>
                                        <% } %>
                                        <a href="#${collapseId}" class="btn bg-secondary-light mr-3 collapse-toggle" data-bs-toggle="collapse" role="button" aria-expanded="false" aria-controls="${collapseId}">
                                            <i class="ri-arrow-down-s-line m-0"></i>
                                        </a>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div
                            class="collapse"
                            id="${collapseId}"
                        >
                            <div
                                class="card card-list task-card"
                            >
                                <div
                                    class="card-header d-flex align-items-center justify-content-between px-0 mx-3"
                                >
                                    <div
                                        class="header-title"
                                    >
                                        <div
                                            class="custom-control custom-checkbox custom-control-inline"
                                        >
                                            <input
                                                type="checkbox"
                                                class="custom-control-input"
                                                id="customCheck05"
                                            />
                                            <label
                                                class="custom-control-label h5"
                                                for="customCheck05"
                                                >Mark as
                                                done</label
                                            >
                                        </div>
                                    </div>
                                    <div>
                                        <a
                                            href="#"
                                            class="btn bg-secondary-light"
                                            >Design</a
                                        >
                                    </div>
                                </div>
                                <div class="card-body">

                                    <div class="card mb-3">
                                        <div
                                            class="card-body"
                                        >
                                            <div
                                                class="row"
                                            >
                                                <div
                                                    class="col-lg-6"
                                                >
                                                    <div class="form-group mb-0">
                                                        <label for="exampleInputText2" class="h5">Members</label>
                                                        <select name="type" class="selectpicker form-control" data-style="py-0" id="membersEditDropdown">
                                                            ${membersList}
                                                        </select>
                                                    </div>
                                                </div>
                                                <div
                                                    class="col-lg-6"
                                                >
                                                    <div
                                                        class="form-group mb-0"
                                                    >
                                                        <label
                                                            for="exampleInputText3"
                                                            class="h5"
                                                            >Due
                                                            Dates*</label
                                                        >
                                                        <input
                                                            type="date"
                                                            class="form-control"
                                                            id="exampleInputText3"
                                                            value="${formattedEndDate}"
                                                        />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card mb-3">
                                        <div
                                            class="card-body"
                                        >
                                            <div
                                                class="row"
                                            >
                                                <div
                                                    class="col-lg-6"
                                                >
                                                    <h5
                                                        class="mb-2"
                                                    >
                                                        Description
                                                    </h5>
                                                    <p
                                                        class="mb-0"
                                                    >
                                                       ${task.description}
                                                    </p>
                                                </div>
                                                <div
                                                    class="col-lg-6"
                                                >
                                                    <h5
                                                        class="mb-2"
                                                    >
                                                        Checklist

                                                    </h5>

                                                    <div
                                                        class="row"
                                                    >
                                                        <div
                                                            class="col-lg-6" id="checklistContainer"
                                                        >
                                                            ${checklistItems}
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div
                                        class="form-group mb-0"
                                    >
                                        <label
                                            for="exampleInputText01"
                                            class="h5"
                                            >Attachments</label
                                        >
                                        <div
                                            class="custom-file"
                                        >
                                            <input
                                                type="file"
                                                class="custom-file-input"
                                                id="inputGroupFile001"

                                            />
                                            <label
                                                class="custom-file-label"
                                                for="inputGroupFile001"
                                                >Upload
                                                media</label
                                            >
                                        </div>
                                        <p id="fileInfo">
                                            <a href="${
                                                task.media
                                            }" target="_blank">📂 See attached file</a>    
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });
            taskBody.innerHTML = html;

            const collapseElements = taskBody.querySelectorAll(".collapse");

            // Đảm bảo tất cả các collapse đều đóng khi tải trang
            collapseElements.forEach((collapse) => {
                collapse.classList.remove("show"); // Đảm bảo collapse ở trạng thái đóng
                new bootstrap.Collapse(collapse, { toggle: false }); // Khởi tạo nhưng không tự động mở
            });

            // Event delegation for collapse toggles
            taskBody.addEventListener("click", function (event) {
                const button = event.target.closest(".collapse-toggle");
                if (button) {
                    event.preventDefault(); // Ngăn chặn hành vi mặc định

                    const target = button.getAttribute("href"); // Lấy target (ID của collapse)
                    const collapseElement = taskBody.querySelector(target);

                    if (collapseElement) {
                        const bsCollapse = new bootstrap.Collapse(
                            collapseElement,
                            {
                                toggle: false, // Đảm bảo không tự động mở khi khởi tạo
                            }
                        );

                        // Toggle collapse khi nhấn nút
                        if (collapseElement.classList.contains("show")) {
                            bsCollapse.hide(); // Đóng
                            button
                                .querySelector("i")
                                .classList.remove("ri-arrow-up-s-line"); // Thay đổi mũi tên lên
                            button
                                .querySelector("i")
                                .classList.add("ri-arrow-down-s-line"); // Thay đổi mũi tên xuống
                        } else {
                            bsCollapse.show(); // Mở
                            button
                                .querySelector("i")
                                .classList.remove("ri-arrow-down-s-line"); // Thay đổi mũi tên xuống
                            button
                                .querySelector("i")
                                .classList.add("ri-arrow-up-s-line"); // Thay đổi mũi tên lên
                        }
                    }
                }
            });
            $(".selectpicker").selectpicker("refresh");
        };

        const renderUser = (users) => {
            console.log(users);

            let html = "";
            users.forEach((user) => {
                html += `<option value="${user._id}">${user.name}</option>`;
            });
            document.getElementById("membersDropdown").innerHTML = html;
            $("#membersDropdown").selectpicker("refresh");
        };

        let sender = {};
        let adminId = "";
        function getTasks() {
            fetch(`http://localhost:3000/api/tasks/${id}`, {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                },
            })
                .then((response) => {
                    if (!response.ok) {
                        throw new Error("Failed to fetch projects");
                    }
                    return response.json();
                })
                .then((data) => {
                    listTasks = data.data.tasks;

                    sender = data.data.user;

                    adminId = data.data.ADMIN_ID;
                    const taskListContainer =
                        document.getElementById("taskList");

                    if (data.code === 2) {
                        if (data.data.user.role === "headofsubject") {
                            taskListContainer.innerHTML = ` <div class="alert alert-info text-center" role="alert">
                                    <strong>Add your task now!</strong>
                            </div>`;
                        } else {
                            taskListContainer.innerHTML = ` <div class="alert alert-info text-center" role="alert">
                                    <strong>No task available</strong>
                            </div>`;
                        }
                    }
                    if (data.code === 0) render(listTasks, data.data.user);
                })
                .catch((error) => {
                    console.error("Error:", error);
                    alert("Error fetching projects.");
                });
        }

        const init = async () => {
            await getTasks();
        };

        init();

        // delete
        function deleteTask(id) {
            console.log(id);

            const task = listTasks.find((p) => p._id === id);
            document.getElementById("delname").innerText = task.title;
            document.getElementById("delid").value = id;
            $("#exampleModal").modal("show");
        }

        function do_delete() {
            displayLoading();
            const taskId = document.getElementById("delid").value;
            fetch(`http://localhost:3000/api/tasks/${taskId}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json",
                },
            })
                .then((response) => {
                    if (!response.ok) {
                        throw new Error("Failed to delete task");
                    }
                    return response.json();
                })
                .then((data) => {
                    $("#exampleModal").modal("hide");
                    init();
                    hideLoading();
                })
                .catch((error) => {
                    console.log("Error:", error);
                    $("#exampleModal").modal("hide");
                    hideLoading();
                });
        }

        function createTask() {
            displayLoading();

            const title = document.getElementById("exampleInputText02").value;
            const members = document.getElementById("membersDropdown").value;
            const dueDate = document.getElementById("exampleInputText05").value;
            const description = document.getElementById(
                "exampleInputText040"
            ).value;
            const checklist = document.getElementById(
                "exampleInputText005"
            ).value;
            const checklistArray = checklist.split(",");
            const checklistObjects = checklistArray.map((item) => ({
                title: item.trim(),
                status: false,
            }));

            const fileInput = document.getElementById("inputGroupFile003");
            const file = fileInput.files[0];

            // Dùng FormData để gửi dữ liệu và file
            const formData = new FormData();
            formData.append("project_id", id);
            formData.append("title", title);
            formData.append("assigned_to", members);
            formData.append("deadline", dueDate);
            formData.append("description", description);
            formData.append("checkList", JSON.stringify(checklistObjects));
            if (file) {
                formData.append("file", file);
            }

            fetch("http://localhost:3000/api/tasks", {
                method: "POST",
                body: formData, // Không cần đặt "Content-Type", trình duyệt sẽ tự động xử lý
            })
                .then((response) => {
                    if (!response.ok) {
                        throw new Error("Failed to create task");
                    }
                    return response.json();
                })
                .then((data) => {
                    hideLoading();
                    init();
                    clearInput();
                })
                .catch((error) => {
                    console.error("Error:", error);
                    hideLoading();
                });
        }

        function clearInput() {
            document.getElementById("exampleInputText02").value = "";
            document.getElementById("membersDropdown").value = "";
            document.getElementById("exampleInputText05").value = "";
            // document.getElementById("exampleInputText2").value = ""; category
            document.getElementById("exampleInputText040").value = "";
            document.getElementById("exampleInputText005").value = "";
            document.getElementById("inputGroupFile003").value = "";
        }

        function editTask(id) {
            const task = listTasks.find((p) => p._id === id);
            document.getElementById("editTaskName").value = task.title;

            const editMembers = document.getElementById("editMembers");
            editMembers.innerHTML = "";
            listMembers.forEach((user) => {
                const option = document.createElement("option");
                option.value = user._id;
                option.textContent = user.name;

                const isMemberAssigned = task.assigned_to.some(
                    (assignedMember) => assignedMember._id === user._id
                );
                if (isMemberAssigned) {
                    option.selected = true;
                }
                editMembers.appendChild(option);
            });

            $("#editMembers").selectpicker("refresh");
            const formattedEndDate = new Date(task.deadline)
                .toISOString()
                .split("T")[0];
            document.getElementById("editDueDate").value = formattedEndDate;
            document.getElementById("editCategory").value = task.category;
            document.getElementById("editDescription").value = task.description;
            document.getElementById("editCheckList").value = task.checkList
                .map((item) => item.title)
                .join(", ");
            // document.getElementById("editInputFile").value = task.attachments;
            document.getElementById("delid").value = id;
            $("#editTaskModal").modal("show");
        }

        function doEdit() {
            try {
                displayLoading();
                const id = document.getElementById("delid").value;
                const title = document.getElementById("editTaskName").value;
                const selectElement = document.getElementById("editMembers");
                const members = Array.from(selectElement.selectedOptions).map(
                    (option) => option.value
                );
                const dueDate = document.getElementById("editDueDate").value;
                // const category = document.getElementById("editCategory").value;
                const description =
                    document.getElementById("editDescription").value;
                const checklist =
                    document.getElementById("editCheckList").value;
                const checklistArray = checklist.split(",");
                const checklistObjects = checklistArray.map((item) => {
                    return {
                        title: item.trim(), // Loại bỏ khoảng trắng thừa
                        status: false, // Mặc định là false, hoặc có thể thay đổi tùy theo yêu cầu
                    };
                });
                const attachments =
                    document.getElementById("editInputFile").value;

                const payload = {
                    title,
                    assigned_to: members,
                    deadline: dueDate,
                    description,
                    checkList: checklistObjects,
                    attachments,
                };
                fetch(`http://localhost:3000/api/tasks/${id}`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(payload),
                })
                    .then((response) => {
                        if (!response.ok) {
                            throw new Error("Failed to update task");
                        }
                        return response.json();
                    })
                    .then((data) => {
                        console.log("Task created:", data);
                        hideLoading();
                        init();
                    })
                    .catch((error) => {
                        console.error("Error:", error);
                        hideLoading();
                    });
            } catch (error) {
                hideLoading();
                console.log(error);
            }
        }

        let debounceTimeout;

        function debounceToggleTaskStatus(id) {
            clearTimeout(debounceTimeout);
            debounceTimeout = setTimeout(() => {
                toggleTaskStatus(id);
            }, 5000); // Chỉ gửi request nếu không có thao tác mới trong 500ms
        }

        function toggleTaskStatus(id) {
            const task = listTasks.find((p) => p._id === id);
            if (!task) return;

            const newStatus = task.status === "Done" ? "In Progress" : "Done";

            // Cập nhật status của task
            task.status = newStatus;

            // Cập nhật toàn bộ checklist
            const updatedChecklist = task.checkList.map((item) => ({
                ...item,
                status: newStatus === "Done", // Nếu task hoàn thành, đánh dấu checklist là true
            }));

            fetch(`http://localhost:3000/api/tasks/${id}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    status: newStatus,
                    checkList: updatedChecklist,
                }),
            })
                .then((response) => {
                    if (!response.ok)
                        throw new Error("Lỗi cập nhật trạng thái");
                    return response.json();
                })
                .then((data) => {
                    console.log("Cập nhật trạng thái thành công:", data);
                })
                .catch((error) => {
                    console.error("Lỗi:", error);
                    alert("Không thể cập nhật trạng thái task.");
                });
        }

        async function toggleChecklistItem(taskId, index) {
            const checkbox = document.getElementById(
                `checklist-${taskId}-${index}`
            );
            const isChecked = checkbox.checked;

            try {
                const response = await fetch(
                    `http://localhost:3000/api/tasks/${taskId}`,
                    {
                        method: "PUT",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({
                            checkListIndex: index,
                            status: isChecked,
                        }),
                    }
                );

                if (!response.ok) {
                    throw new Error("Failed to update checklist item");
                }

                const result = await response.json();
                console.log("Checklist updated successfully!", result);
            } catch (error) {
                console.error("Error updating checklist item:", error);
                checkbox.checked = !isChecked; // Rollback nếu lỗi
            }
        }

        function openExtendModal(taskId, taskTitle) {
            const modalId = `#extend-task-modal`;
            $(modalId).modal("show");
            document.getElementById("delid").value = taskId;
        }

        function sendNotiExtend() {
            try {
                displayLoading();
                const reason =
                    document.getElementById("extendTaskReason").value;
                const dateExtend = document.getElementById("dateExtend").value;
                const taskId = document.getElementById("delid").value;
                const task = listTasks.find((p) => p._id === taskId);
                console.log(task.title);

                if (!reason || !dateExtend) {
                    alert("Please fill in all fields!");
                    return;
                }

                const extendData = {
                    taskId: taskId,
                    reason: reason,
                    dateExtend: dateExtend,
                    user: sender,
                    title: task.title,
                };

                socket.emit("send-extend-notification", extendData);
                hideLoading();
                clearInputExtend();
            } catch (error) {
                console.log(error);
                hideLoading();
            }
        }

        function clearInputExtend() {
            document.getElementById("extendTaskReason").value = "";
            document.getElementById("dateExtend").value = "";
            document.getElementById("proofExtend").value = "";
        }
    </script>
</html>
