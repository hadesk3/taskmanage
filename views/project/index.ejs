<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1, shrink-to-fit=no"
        />
        <!-- Favicon -->
        <link rel="shortcut icon" href="/images/favicon.ico" />
        <link rel="stylesheet" href="/css/backend-plugin.min.css" />
        <link rel="stylesheet" href="/css/backend.css?v=1.0.0" />
        <link
            rel="stylesheet"
            href="/vendor/line-awesome/dist/line-awesome/css/line-awesome.min.css"
        />
        <link rel="stylesheet" href="/vendor/remixicon/fonts/remixicon.css" />

        <link
            rel="stylesheet"
            href="/vendor/tui-calendar/tui-calendar/dist/tui-calendar.css"
        />
        <link
            rel="stylesheet"
            href="/vendor/tui-calendar/tui-date-picker/dist/tui-date-picker.css"
        />
        <link
            rel="stylesheet"
            href="/vendor/tui-calendar/tui-time-picker/dist/tui-time-picker.css"
        />
    </head>
    <body class="">
        <!-- loader Start -->
        <div id="loading">
            <div id="loading-center"></div>
        </div>
        <!-- loader END -->
        <!-- Wrapper Start -->
        <div class="wrapper">
            <div class="content-page">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="card">
                                <div class="card-body">
                                    <div
                                        class="d-flex flex-wrap align-items-center justify-content-between breadcrumb-content"
                                    >
                                        <h5
                                            onclick="window.location.reload();"
                                            style="cursor: pointer"
                                        >
                                            Your Projects
                                        </h5>
                                        <div
                                            class="d-flex flex-wrap align-items-center justify-content-between"
                                        >
                                            <div
                                                class="dropdown status-dropdown mr-3"
                                            >
                                                <div
                                                    class="dropdown-toggle"
                                                    id="dropdownMenuButton03"
                                                    data-toggle="dropdown"
                                                >
                                                    <div class="btn bg-body">
                                                        <span class="h6"
                                                            >Status :</span
                                                        >

                                                        <i
                                                            class="ri-arrow-down-s-line ml-2 mr-0"
                                                        ></i>
                                                    </div>
                                                </div>
                                                <div
                                                    class="dropdown-menu dropdown-menu-right"
                                                    aria-labelledby="dropdownMenuButton03"
                                                >
                                                    <a
                                                        class="dropdown-item"
                                                        href="#"
                                                        ><i
                                                            class="ri-star-fill mr-2"
                                                        ></i
                                                        >All
                                                    </a>
                                                    <a
                                                        class="dropdown-item"
                                                        href="#"
                                                        ><i
                                                            class="ri-mic-line mr-2"
                                                        ></i
                                                        >In Progress</a
                                                    >
                                                    <a
                                                        class="dropdown-item"
                                                        href="#"
                                                        ><i
                                                            class="ri-attachment-line mr-2"
                                                        ></i
                                                        >Completed</a
                                                    >
                                                </div>
                                            </div>

                                            <% if(user.role === 'headofsubject')
                                            { %>
                                            <div
                                                class="pl-3 border-left btn-new"
                                            >
                                                <a
                                                    href="#"
                                                    class="btn btn-primary"
                                                    data-target="#new-project-modal"
                                                    data-toggle="modal"
                                                    >New Project</a
                                                >
                                            </div>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div
                        id="grid"
                        class="item-content animate__animated animate__fadeIn active"
                        data-toggle-extra="tab-content"
                    >
                        <div class="row" id="account-body"></div>
                    </div>
                    <!-- Page end  -->
                </div>
            </div>
        </div>
        <!-- Wrapper End-->

        <!-- Modal add new -->
        <div
            class="modal fade"
            role="dialog"
            aria-modal="true"
            id="new-project-modal"
        >
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div
                        class="modal-header d-block text-center pb-3 border-bttom"
                    >
                        <h3 class="modal-title" id="exampleModalCenterTitle01">
                            New Project
                        </h3>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="form-group mb-3">
                                    <label for="exampleInputText01" class="h5"
                                        >Project Name*</label
                                    >
                                    <input
                                        type="text"
                                        class="form-control"
                                        id="exampleInputText01"
                                        placeholder="Project Name"
                                    />
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group mb-3">
                                    <label for="exampleInputText02" class="h5"
                                        >Description *</label
                                    >
                                    <textarea
                                        type="text"
                                        class="form-control"
                                        id="exampleInputText02"
                                        placeholder="Description"
                                    ></textarea>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group mb-3">
                                    <label for="exampleInputText2" class="h5"
                                        >Categories *</label
                                    >
                                    <select
                                        name="type"
                                        class="selectpicker form-control"
                                        data-style="py-0"
                                    >
                                        <option>Category</option>
                                        <option>Android</option>
                                        <option>IOS</option>
                                        <option>Ui/Ux Design</option>
                                        <option>Development</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group mb-3">
                                    <label for="exampleInputText004" class="h5"
                                        >Due Dates*</label
                                    >
                                    <input
                                        type="date"
                                        class="form-control"
                                        id="exampleInputText004"
                                        value=""
                                    />
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group mb-3">
                                    <label for="addUser" class="h5"
                                        >Assign Members*</label
                                    >
                                    <select
                                        name="type"
                                        class="selectpicker form-control"
                                        multiple="multiple"
                                        data-style="py-0"
                                        id="addUser"
                                    ></select>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div
                                    class="d-flex flex-wrap align-items-ceter justify-content-center mt-2"
                                >
                                    <button
                                        class="btn btn-primary mr-3"
                                        data-dismiss="modal"
                                        onclick="addProject()"
                                    >
                                        Save
                                    </button>
                                    <div
                                        class="btn btn-primary"
                                        data-dismiss="modal"
                                    >
                                        Cancel
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal edit -->
        <div
            class="modal fade"
            role="dialog"
            aria-modal="true"
            id="edit-project-modal"
        >
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div
                        class="modal-header d-block text-center pb-3 border-bttom"
                    >
                        <h3 class="modal-title" id="exampleModalCenterTitle01">
                            Edit Project
                        </h3>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="form-group mb-3">
                                    <label for="editProjectName" class="h5"
                                        >Project Name*</label
                                    >
                                    <input
                                        type="text"
                                        class="form-control"
                                        id="editProjectName"
                                        placeholder="Project Name"
                                    />
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group mb-3">
                                    <label
                                        for="editProjectDescription"
                                        class="h5"
                                        >Description *</label
                                    >
                                    <textarea
                                        type="text"
                                        class="form-control"
                                        id="editProjectDescription"
                                        placeholder="Description"
                                    ></textarea>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group mb-3">
                                    <label for="exampleInputText2" class="h5"
                                        >Categories *</label
                                    >
                                    <select
                                        name="type"
                                        class="selectpicker form-control"
                                        data-style="py-0"
                                    >
                                        <option>Category</option>
                                        <option>Android</option>
                                        <option>IOS</option>
                                        <option>Ui/Ux Design</option>
                                        <option>Development</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group mb-3">
                                    <label for="editEndDate" class="h5"
                                        >Due Dates*</label
                                    >
                                    <input
                                        type="date"
                                        class="form-control"
                                        id="editEndDate"
                                        value=""
                                    />
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group mb-3">
                                    <label for="editUser" class="h5"
                                        >Assign Members*</label
                                    >
                                    <select
                                        name="type"
                                        class="selectpicker form-control"
                                        multiple="multiple"
                                        data-style="py-0"
                                        id="editUser"
                                    ></select>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div
                                    class="d-flex flex-wrap align-items-ceter justify-content-center mt-2"
                                >
                                    <button
                                        class="btn btn-primary mr-3"
                                        data-dismiss="modal"
                                        onclick="doEdit()"
                                    >
                                        Save
                                    </button>
                                    <div
                                        class="btn btn-primary"
                                        data-dismiss="modal"
                                    >
                                        Cancel
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Confirm delete -->
        <div
            class="modal fade"
            id="exampleModal"
            tabindex="-1"
            role="dialog"
            aria-labelledby="exampleModalLabel"
            aria-hidden="true"
        >
            <div class="modal-dialog">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title" id="exampleModalLabel">
                            Delete project
                        </h4>
                        <button
                            type="button"
                            class="close"
                            data-dismiss="modal"
                        >
                            &times;
                        </button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        Do you want to delete project
                        <strong id="delname"></strong>? , all data will be lost.
                    </div>
                    <input type="hidden" id="delid" />
                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button
                            type="button"
                            class="btn btn-danger"
                            onclick="do_delete()"
                        >
                            Delete
                        </button>
                        <button
                            type="button"
                            class="btn btn-dark"
                            data-dismiss="modal"
                        >
                            Cancle
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Confirm delete -->

        <!-- Confirm change status -->
        <div
            class="modal fade"
            id="changeStatusModal"
            tabindex="-1"
            role="dialog"
            aria-labelledby="exampleModalLabel"
            aria-hidden="true"
        >
            <div class="modal-dialog">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title" id="exampleModalLabel">
                            Make as done
                        </h4>
                        <button
                            type="button"
                            class="close"
                            data-dismiss="modal"
                        >
                            &times;
                        </button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        Do you want to make as done project
                        <strong id="statusName"></strong>? , all task wil be
                        make as done!.
                    </div>
                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button
                            type="button"
                            class="btn btn-danger"
                            onclick="do_changeStatus()"
                        >
                            Confirm
                        </button>
                        <button
                            type="button"
                            class="btn btn-dark"
                            data-dismiss="modal"
                        >
                            Cancle
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Confirm change status -->

        <!-- script manage project -->
        <script>
            // show loading
            function showLoading() {
                document.getElementById("loading").style.display = "block";
            }
            function hideLoading() {
                document.getElementById("loading").style.display = "none";
            }
            document.addEventListener("DOMContentLoaded", function () {
                const statusDropdownItems = document.querySelectorAll(
                    ".status-dropdown .dropdown-item"
                );
                const statusButton = document.querySelector(
                    ".status-dropdown .btn span.h6"
                );

                let selectedStatus = "All"; // Trạng thái mặc định là "All"

                // Cập nhật giao diện khi trang tải xong
                statusButton.textContent = `Status: ${selectedStatus}`;
                filterProjectsByStatus(selectedStatus);

                // Xử lý sự kiện click vào mỗi mục trong dropdown
                statusDropdownItems.forEach((item) => {
                    item.addEventListener("click", function (event) {
                        event.preventDefault(); // Ngăn chặn hành động mặc định của thẻ <a>

                        selectedStatus = this.textContent.trim(); // Lấy trạng thái được chọn
                        statusButton.textContent = `Status: ${selectedStatus}`; // Cập nhật nút dropdown

                        filterProjectsByStatus(selectedStatus); // Lọc danh sách dự án
                    });
                });

                // Hàm lọc danh sách dự án theo trạng thái
                function filterProjectsByStatus(status) {
                    const filteredProjects = listProject.filter((project) => {
                        return status === "All" || project.status === status;
                    });

                    render(filteredProjects, listUser); // Cập nhật giao diện
                }
            });

            const accountBody = document.getElementById("account-body");

            let listProject = [];
            let listUser = [];
            let total = 0;

            // Get user
            function getUser() {
                const url = `${window.location.origin}/api/users`;
                fetch(url)
                    .then((res) => res.json())
                    .then((data) => {
                        listUser = data.data;
                        renderUser(listUser);
                    })
                    .catch((error) => {
                        console.log(error);
                    });
            }

            const renderUser = (users) => {
                let html = "";
                users.forEach((user) => {
                    html += `<option value="${user._id}">${user.name}</option>`;
                });
                const addUserSelect = document.getElementById("addUser");
                if (addUserSelect) {
                    addUserSelect.innerHTML = html;

                    $("#addUser").selectpicker("refresh");
                } else {
                    console.error("Element with id 'addUser' not found!");
                }
            };

            getUser();

            const render = (projects, user) => {
                let html = "";
                projects.forEach((project, index) => {
                    const lecturersHtml = project.lecturers
                        .map((lecturer) => {
                            const avatar =
                                lecturer.avatar ||
                                "/images/user/default-avatar.png";
                            return `
                                <div class="iq-media text-center">
                                    <img class="img-fluid avatar-40 rounded-circle" src="${avatar}" alt="${lecturer.name}">
                                </div>`;
                        })
                        .join("");

                    const starCheck =
                        project.status === "Completed"
                            ? "ri-checkbox-circle-fill m-0 text-success"
                            : "ri-checkbox-circle-fill m-0";

                    const adminActions =
                        user && user.role === "headofsubject"
                            ? `
                                <div class="d-flex align-items-center">
                                    <button class="btn bg-secondary-light no-link" type="button"
                                        data-toggle="modal"
                                        data-target="#edit-project-modal"
                                        onclick="editProject('${project._id}'); event.stopPropagation();">
                                        <i class="ri-edit-box-line m-0"></i>
                                    </button>
                                    <button class="btn bg-secondary-light ml-2 no-link" type="button"
                                        data-bs-toggle="modal"
                                        data-bs-target="#exampleModal"
                                        onclick="deleteProject('${project._id}'); event.stopPropagation();">
                                        <i class="ri-delete-bin-line m-0"></i>
                                    </button>
                                </div>`
                            : `
                                <div class="project-deadline text-muted font-weight-bold text-right">
                                    Deadline: ${new Date(
                                        project.end_date
                                    ).toLocaleDateString()}
                                </div>`;

                    html += `
                        <div class="col-lg-4 col-md-6" onclick="redirectPage('${project._id}');">
                            <div class="card card-block card-stretch card-height">
                                <div class="card-body">
                                    <div class="d-flex align-items-center justify-content-between mb-4">
                                        <div
                                            id="circle-progress-01"
                                            class="circle-progress-01 circle-progress circle-progress-primary"
                                            data-min-value="0"
                                            data-max-value="100"
                                            data-value="${project.completion}"
                                            data-type="percent"
                                        ></div>
                                        <i class="${starCheck}" style="cursor: pointer;" onclick="changeStatus(event, '${project._id}');"></i>
                                    </div>
                                    <h5 class="mb-1">${project.name}</h5>
                                    <p class="mb-3">${project.description}</p>
                                    <div class="d-flex align-items-center justify-content-between pt-3 border-top">
                                        <div class="iq-media-group d-flex">
                                            ${lecturersHtml}
                                        </div>
                                        ${adminActions}
                                    </div>
                                </div>
                            </div>
                        </div>`;
                });

                accountBody.innerHTML = html;
                setTimeout(drawCircleProgress, 100); // Vẽ lại progress sau khi HTML cập nhật
            };

            function drawCircleProgress() {
                document
                    .querySelectorAll(".circle-progress-01")
                    .forEach((el) => {
                        let value = el.dataset.value; // Lấy giá trị từ data-value (0-100)
                        let radius = 47; // Bán kính vòng tròn
                        let circumference = 2 * Math.PI * radius; // Chu vi vòng tròn
                        let offset =
                            circumference - (value / 100) * circumference; // Độ dài đường bị ẩn

                        let svg = `
                            <svg version="1.1" width="100" height="100" viewBox="0 0 100 100" class="circle-progress">
                                <circle class="circle-progress-circle" cx="50" cy="50" r="${radius}" fill="none" stroke="#ddd" stroke-width="8"></circle>
                                <circle class="circle-progress-value" cx="50" cy="50" r="${radius}" fill="none" stroke="#00E699" stroke-width="8"
                                    stroke-dasharray="${circumference}" stroke-dashoffset="${circumference}"
                                    transform="rotate(-90 50 50)" stroke-linecap="round">
                                </circle>
                                <text class="circle-progress-text" x="50" y="50" font="16px Arial, sans-serif" text-anchor="middle" fill="#999" dy="0.4em">
                                    ${value}%
                                </text>
                            </svg>`;

                        el.innerHTML = svg; // Gán lại SVG vào phần tử

                        // Hiệu ứng animation
                        setTimeout(() => {
                            let circle = el.querySelector(
                                ".circle-progress-value"
                            );
                            circle.style.transition =
                                "stroke-dashoffset 1.5s ease-in-out";
                            circle.style.strokeDashoffset = offset;
                        }, 100);
                    });
            }

            const getProjects = async () => {
                showLoading();
                const url = `${window.location.origin}/api/projects`;
                try {
                    const res = await fetch(url);

                    const data = await res.json();
                    listProject = data.data.projectsWithCompletion;

                    hideLoading();
                    render(data.data.projectsWithCompletion, data.data.user);
                    return data;
                } catch (error) {
                    hideLoading();
                    console.log(error);
                }
            };

            const init = async () => {
                await getProjects();
            };

            // INIT
            init();

            // DELETE
            function deleteProject(id) {
                const project = listProject.find((p) => p._id === id);
                document.getElementById("delname").innerText = project.name;
                document.getElementById("delid").value = id;
                $("#exampleModal").modal("show");
            }

            function do_delete() {
                showLoading();
                const id = document.getElementById("delid").value;
                const url = `${window.location.origin}/api/projects/${id}`;
                fetch(url, {
                    method: "DELETE",
                })
                    .then((res) => res.json())
                    .then((data) => {
                        if (data.code === 0) {
                            hideLoading();
                            $("#exampleModal").modal("hide");
                            init();
                        }
                    })
                    .catch((error) => {
                        hideLoading();
                        $("#exampleModal").modal("hide");
                        console.log(error);
                    });
            }

            // CHANGE STATUS
            function changeStatus(event, id) {
                event.stopPropagation(); // Ngăn chặn sự kiện lan truyền lên thẻ cha

                const project = listProject.find((p) => p._id === id);
                if (project.status === "Completed") {
                    return;
                }
                document.getElementById("statusName").innerText = project.name;
                document.getElementById("delid").value = id;
                $("#changeStatusModal").modal("show");
            }

            function do_changeStatus() {
                showLoading();
                const id = document.getElementById("delid").value;
                const url = `${window.location.origin}/api/projects/${id}`;
                fetch(url, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        status: "Completed",
                    }),
                })
                    .then((res) => res.json())
                    .then((data) => {
                        if (data.code === 0) {
                            hideLoading();
                            $("#changeStatusModal").modal("hide");
                            init();
                        }
                    })
                    .catch((error) => {
                        hideLoading();
                        $("#changeStatusModal").modal("hide");
                        console.log(error);
                    });
            }

            // ADD
            function addProject() {
                showLoading();
                const name =
                    document.getElementById("exampleInputText01").value;
                const description =
                    document.getElementById("exampleInputText02").value;
                // const category =
                //     document.getElementById("exampleInputText03").value;
                const dueDate = document.getElementById(
                    "exampleInputText004"
                ).value;
                const selectElement = document.getElementById("addUser");
                const members = Array.from(selectElement.selectedOptions).map(
                    (option) => option.value
                );

                const nameMembers = Array.from(
                    selectElement.selectedOptions
                ).map((option) => option.text);

                const users = members.map((id, index) => ({
                    _id: id,
                    name: nameMembers[index],
                }));

                const url = `${window.location.origin}/api/projects`;
                fetch(url, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        name,
                        description,
                        // category,
                        end_date: dueDate,
                        lecturers: members,
                    }),
                })
                    .then((res) => res.json())
                    .then((data) => {
                        if (data.code === 0) {
                            hideLoading();
                            $("#new-project-modal").modal("hide");
                            socket.emit("add-user-project", {
                                users,
                                message: `You have been added to project ${name}`,
                                projectId: data.data._id,
                                projectName: name,
                            });
                            init();
                            clearInput();
                        }
                    })
                    .catch((error) => {
                        hideLoading();
                        $("#new-project-modal").modal("hide");
                        console.log(error);
                    });
            }

            function clearInput() {
                document.getElementById("exampleInputText01").value = "";
                document.getElementById("exampleInputText02").value = "";
                const selectElement = document.getElementById("addUser");
                Array.from(selectElement.options).forEach(
                    (option) => (option.selected = false)
                );
                document.getElementById("exampleInputText004").value = "";
            }

            // EDIT
            function editProject(id) {
                const project = listProject.find((p) => p._id === id);

                const editUserSelect = document.getElementById("editUser");

                // Reset dropdown trước khi thêm option
                editUserSelect.innerHTML = "";

                listUser.forEach((user) => {
                    const option = document.createElement("option");
                    option.value = user._id;
                    option.textContent = user.name;

                    // Kiểm tra nếu user có trong danh sách lecturers
                    const isLecturer = project.lecturers.some(
                        (lecturer) => lecturer._id === user._id
                    );
                    if (isLecturer) {
                        option.selected = true; // Đánh dấu đã được chọn
                    }

                    editUserSelect.appendChild(option);
                });

                // Cập nhật giao diện selectpicker
                $("#editUser").selectpicker("refresh");

                document.getElementById("editProjectName").value = project.name;
                document.getElementById("editProjectDescription").value =
                    project.description;
                if (project.end_date) {
                    const formattedEndDate = new Date(project.end_date)
                        .toISOString()
                        .split("T")[0];
                    document.getElementById("editEndDate").value =
                        formattedEndDate;
                } else {
                    document.getElementById("editEndDate").value = ""; // Để trống nếu không có giá trị
                }

                document.getElementById("delid").value = id;
            }

            function doEdit() {
                showLoading();
                const id = document.getElementById("delid").value;
                const name = document.getElementById("editProjectName").value;
                const description = document.getElementById(
                    "editProjectDescription"
                ).value;
                const dueDate = document.getElementById("editEndDate").value;
                const selectElement = document.getElementById("editUser");
                const members = Array.from(selectElement.selectedOptions).map(
                    (option) => option.value
                );

                const url = `${window.location.origin}/api/projects/${id}`;
                fetch(url, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        name,
                        description,
                        end_date: dueDate,
                        lecturers: members,
                    }),
                })
                    .then((res) => res.json())
                    .then((data) => {
                        if (data.code === 0) {
                            hideLoading();
                            $("#edit-project-modal").modal("hide");
                            init();
                        }
                    })
                    .catch((error) => {
                        hideLoading();
                        $("#edit-project-modal").modal("hide");
                        console.log(error);
                    });
            }

            //
            function redirectPage(id) {
                let members = listProject.find((p) => p._id === id).lecturers;
                localStorage.setItem("listUser", JSON.stringify(members));
                localStorage.setItem(
                    "projectName",
                    listProject.find((p) => p._id === id).name
                );
                window.location.href = `/task/${id}`;
            }
        </script>
    </body>
</html>
